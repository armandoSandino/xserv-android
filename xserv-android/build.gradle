apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'

group = "com.mi.xserv"
version = "1.2.3"

android {
    compileSdkVersion 24
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 24
        versionCode 25
        versionName version
    }
    buildTypes {

    }
}

def siteUrl = 'https://github.com/xserv/xserv-android'      // Homepage URL of the library
def gitUrl = 'https://github.com/xserv/xserv-android.git'   // Git repository URL


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'xserv-android'
        desc = 'Xserv Android Client Library'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["LGPL-3.0"]
        labels = ['aar', 'android', 'real-time', 'chat', 'messaging', 'push']
        publicDownloadNumbers = true
        publish = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.koushikdutta.async:androidasync:2.1.7'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
